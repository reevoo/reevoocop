require: rubocop-performance

Metrics/BlockLength:
  Enabled: false
# See https://github.com/reevoo/reevoocop/pull/13
# * Other metrics like complexity should discorage complexity
# * Sometimes it is less clear to squeese things on too few lines
Metrics/MethodLength:
  Enabled: false
Metrics/ModuleLength:
  Enabled: false

Naming/VariableName:
  Enabled: false

Layout/ClosingParenthesisIndentation:
  Enabled: false
# Allow use of empty lines to visually group code into 'paragraphs'
Layout/EmptyLines:
  Enabled: false
# Blank lines are useful in separating methods, specs, etc. from one another,
# and improves the aesthetics of the code. Consequently, we've enabled
# EmptyLines around blocks and methods. This is less desirable for Classes and
# Modules where the definitions may be usefully put on consecutive lines, e.g.:
#
# module API
#   module Auth
#     class Person
# ... etc
#
Layout/EmptyLineAfterMagicComment:
  Enabled: false
Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: true
Layout/EmptyLinesAroundBlockBody:
  Enabled: true
Layout/EmptyLinesAroundClassBody:
  Enabled: false
Layout/EmptyLinesAroundMethodBody:
  Enabled: true
Layout/EmptyLinesAroundModuleBody:
  Enabled: false
Layout/FirstArgumentIndentation:
  Enabled: false
Layout/HeredocIndentation:
  Enabled: false
Layout/LineLength:
  Max: 120
# Keeping parameters in a line makes them easier to read, but in long lines the
# parameters look ridiculous if using the "with_first_parameter" option, making
# it more difficult to read the code
Layout/ParameterAlignment:
  EnforcedStyle: with_fixed_indentation
Layout/SpaceAroundMethodCallOperator:
  Enabled: true

Lint/DeprecatedOpenSSLConstant:
  Enabled: true
Lint/DuplicateElsifCondition:
  Enabled: true
Lint/MixedRegexpCaptureTypes:
  Enabled: true
Lint/RaiseException:
  Enabled: true
Lint/StructNewOverride:
  Enabled: true

# See examples/block_call.rb
Performance/RedundantBlockCall:
  Enabled: false

Style/AccessorGrouping:
  Enabled: true
Style/AndOr:
  Enabled: false
Style/ArrayCoercion:
  Enabled: false
Style/BisectedAttrAccessor:
  Enabled: true
Style/CaseLikeIf:
  Enabled: true
Style/ConditionalAssignment:
  Enabled: false
Style/Documentation:
  Enabled: false
# See https://github.com/reevoo/reevoocop/issues/18
# We are fine with using double negation to to force
# something truthy or falsy to true or false
Style/DoubleNegation:
  Enabled: false
Style/ExponentialNotation:
  Enabled: true
Style/FrozenStringLiteralComment:
  Enabled: false
Style/GuardClause:
  Enabled: false
Style/HashAsLastArrayItem:
  Enabled: false
Style/HashEachMethods:
  Enabled: true
Style/HashLikeCase:
  Enabled: true
Style/HashTransformKeys:
  Enabled: true
Style/HashTransformValues:
  Enabled: true
Style/IdenticalConditionalBranches:
  Enabled: false
Style/IfInsideElse:
  Enabled: false
Style/MethodMissingSuper:
  Enabled: false
Style/MissingRespondToMissing:
  Enabled: false
# See https://github.com/reevoo/reevoocop/issues/10
Style/ModuleFunction:
  Enabled: false
Style/MultipleComparison:
  Enabled: false
Style/NestedParenthesizedCalls:
  Enabled: false
Style/NumericPredicate:
  Enabled: false
Style/ParallelAssignment:
  Enabled: false
Style/PercentLiteralDelimiters:
  Enabled: false
Style/RedundantAssignment:
  Enabled: true
Style/RedundantFetchBlock:
  Enabled: true
Style/RedundantFileExtensionInRequire:
  Enabled: true
Style/RedundantRegexpCharacterClass:
  Enabled: true
Style/RedundantRegexpEscape:
  Enabled: true
Style/RegexpLiteral:
  Enabled: false
Style/RescueStandardError:
  Enabled: false
Style/SignalException:
  EnforcedStyle: semantic
Style/SlicingWithRange:
  Enabled: true
# See more here: https://viget.com/extend/just-use-double-quoted-ruby-strings
Style/StringLiterals:
  EnforcedStyle: double_quotes
Style/StringLiteralsInInterpolation:
  EnforcedStyle: double_quotes
Style/StructInheritance:
  Enabled: false
# See https://github.com/reevoo/reevoocop/issues/1
# * For cleaner git diffs
# * Simpler :sort:
Style/TrailingCommaInArrayLiteral:
  Enabled: true
  EnforcedStyleForMultiline: consistent_comma
Style/TrailingCommaInArguments:
  Enabled: true
  EnforcedStyleForMultiline: comma
Style/TrailingCommaInHashLiteral:
  Enabled: true
  EnforcedStyleForMultiline: consistent_comma

AllCops:
  Exclude:
    - !ruby/regexp /node_modules/
    - !ruby/regexp /db\/schema\.rb/
    - 'vendor/bundle/**/*'
